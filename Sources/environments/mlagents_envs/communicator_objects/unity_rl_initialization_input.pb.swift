// DO NOT EDIT.
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: mlagents_envs/communicator_objects/unity_rl_initialization_input.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

/// The initializaiton message - this is typically sent from the Python trainer to the C# environment.
struct CommunicatorObjects_UnityRLInitializationInputProto {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var seed: Int32 = 0

  /// Communication protocol version that the initiating side (typically the Python trainer) is using.
  var communicationVersion: String = String()

  /// Package/library version that the initiating side (typically the Python trainer) is using.
  var packageVersion: String = String()

  /// The RL Capabilities of the Python trainer.
  var capabilities: CommunicatorObjects_UnityRLCapabilitiesProto {
    get {return _capabilities ?? CommunicatorObjects_UnityRLCapabilitiesProto()}
    set {_capabilities = newValue}
  }
  /// Returns true if `capabilities` has been explicitly set.
  var hasCapabilities: Bool {return self._capabilities != nil}
  /// Clears the value of `capabilities`. Subsequent reads from it will return its default value.
  mutating func clearCapabilities() {self._capabilities = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _capabilities: CommunicatorObjects_UnityRLCapabilitiesProto? = nil
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "communicator_objects"

extension CommunicatorObjects_UnityRLInitializationInputProto: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".UnityRLInitializationInputProto"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "seed"),
    2: .standard(proto: "communication_version"),
    3: .standard(proto: "package_version"),
    4: .same(proto: "capabilities"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularInt32Field(value: &self.seed)
      case 2: try decoder.decodeSingularStringField(value: &self.communicationVersion)
      case 3: try decoder.decodeSingularStringField(value: &self.packageVersion)
      case 4: try decoder.decodeSingularMessageField(value: &self._capabilities)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.seed != 0 {
      try visitor.visitSingularInt32Field(value: self.seed, fieldNumber: 1)
    }
    if !self.communicationVersion.isEmpty {
      try visitor.visitSingularStringField(value: self.communicationVersion, fieldNumber: 2)
    }
    if !self.packageVersion.isEmpty {
      try visitor.visitSingularStringField(value: self.packageVersion, fieldNumber: 3)
    }
    if let v = self._capabilities {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 4)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: CommunicatorObjects_UnityRLInitializationInputProto, rhs: CommunicatorObjects_UnityRLInitializationInputProto) -> Bool {
    if lhs.seed != rhs.seed {return false}
    if lhs.communicationVersion != rhs.communicationVersion {return false}
    if lhs.packageVersion != rhs.packageVersion {return false}
    if lhs._capabilities != rhs._capabilities {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
