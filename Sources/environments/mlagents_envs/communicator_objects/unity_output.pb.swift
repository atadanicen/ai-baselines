// DO NOT EDIT.
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: mlagents_envs/communicator_objects/unity_output.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

struct CommunicatorObjects_UnityOutputProto {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var rlOutput: CommunicatorObjects_UnityRLOutputProto {
    get {return _rlOutput ?? CommunicatorObjects_UnityRLOutputProto()}
    set {_rlOutput = newValue}
  }
  /// Returns true if `rlOutput` has been explicitly set.
  var hasRlOutput: Bool {return self._rlOutput != nil}
  /// Clears the value of `rlOutput`. Subsequent reads from it will return its default value.
  mutating func clearRlOutput() {self._rlOutput = nil}

  var rlInitializationOutput: CommunicatorObjects_UnityRLInitializationOutputProto {
    get {return _rlInitializationOutput ?? CommunicatorObjects_UnityRLInitializationOutputProto()}
    set {_rlInitializationOutput = newValue}
  }
  /// Returns true if `rlInitializationOutput` has been explicitly set.
  var hasRlInitializationOutput: Bool {return self._rlInitializationOutput != nil}
  /// Clears the value of `rlInitializationOutput`. Subsequent reads from it will return its default value.
  mutating func clearRlInitializationOutput() {self._rlInitializationOutput = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _rlOutput: CommunicatorObjects_UnityRLOutputProto? = nil
  fileprivate var _rlInitializationOutput: CommunicatorObjects_UnityRLInitializationOutputProto? = nil
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "communicator_objects"

extension CommunicatorObjects_UnityOutputProto: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".UnityOutputProto"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "rl_output"),
    2: .standard(proto: "rl_initialization_output"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularMessageField(value: &self._rlOutput)
      case 2: try decoder.decodeSingularMessageField(value: &self._rlInitializationOutput)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._rlOutput {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
    }
    if let v = self._rlInitializationOutput {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: CommunicatorObjects_UnityOutputProto, rhs: CommunicatorObjects_UnityOutputProto) -> Bool {
    if lhs._rlOutput != rhs._rlOutput {return false}
    if lhs._rlInitializationOutput != rhs._rlInitializationOutput {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
