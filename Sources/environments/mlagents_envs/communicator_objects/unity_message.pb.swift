// DO NOT EDIT.
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: mlagents_envs/communicator_objects/unity_message.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

struct CommunicatorObjects_UnityMessageProto {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var header: CommunicatorObjects_HeaderProto {
    get {return _header ?? CommunicatorObjects_HeaderProto()}
    set {_header = newValue}
  }
  /// Returns true if `header` has been explicitly set.
  var hasHeader: Bool {return self._header != nil}
  /// Clears the value of `header`. Subsequent reads from it will return its default value.
  mutating func clearHeader() {self._header = nil}

  var unityOutput: CommunicatorObjects_UnityOutputProto {
    get {return _unityOutput ?? CommunicatorObjects_UnityOutputProto()}
    set {_unityOutput = newValue}
  }
  /// Returns true if `unityOutput` has been explicitly set.
  var hasUnityOutput: Bool {return self._unityOutput != nil}
  /// Clears the value of `unityOutput`. Subsequent reads from it will return its default value.
  mutating func clearUnityOutput() {self._unityOutput = nil}

  var unityInput: CommunicatorObjects_UnityInputProto {
    get {return _unityInput ?? CommunicatorObjects_UnityInputProto()}
    set {_unityInput = newValue}
  }
  /// Returns true if `unityInput` has been explicitly set.
  var hasUnityInput: Bool {return self._unityInput != nil}
  /// Clears the value of `unityInput`. Subsequent reads from it will return its default value.
  mutating func clearUnityInput() {self._unityInput = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _header: CommunicatorObjects_HeaderProto? = nil
  fileprivate var _unityOutput: CommunicatorObjects_UnityOutputProto? = nil
  fileprivate var _unityInput: CommunicatorObjects_UnityInputProto? = nil
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "communicator_objects"

extension CommunicatorObjects_UnityMessageProto: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".UnityMessageProto"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "header"),
    2: .standard(proto: "unity_output"),
    3: .standard(proto: "unity_input"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularMessageField(value: &self._header)
      case 2: try decoder.decodeSingularMessageField(value: &self._unityOutput)
      case 3: try decoder.decodeSingularMessageField(value: &self._unityInput)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._header {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
    }
    if let v = self._unityOutput {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
    }
    if let v = self._unityInput {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: CommunicatorObjects_UnityMessageProto, rhs: CommunicatorObjects_UnityMessageProto) -> Bool {
    if lhs._header != rhs._header {return false}
    if lhs._unityOutput != rhs._unityOutput {return false}
    if lhs._unityInput != rhs._unityInput {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
